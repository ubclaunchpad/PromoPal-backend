# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Foodies BE CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    working-directory: ./backend

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile
        # https://stackoverflow.com/questions/58482655/what-is-the-closest-to-npm-ci-in-yarn
      - name: lint
        run: yarn run lint

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile
        # https://stackoverflow.com/questions/58482655/what-is-the-closest-to-npm-ci-in-yarn
      - name: Build
        run: yarn run build

  integration tests:
    needs: [lint, build]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: foodies_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile
        # https://stackoverflow.com/questions/58482655/what-is-the-closest-to-npm-ci-in-yarn
      - name: Test connection
        run: |
          psql -d postgresql://postgres@localhost/foodies_test --username=postgres -tc "CREATE TABLE hello(field1 INT, field2 INT)"
          psql -d postgresql://postgres@localhost/foodies_test --username=postgres -tc "INSERT INTO hello(field1, field2) VALUES (1,2)"
          psql -d postgresql://postgres@localhost/foodies_test --username=postgres -tc "SELECT * FROM hello"
        env:
          # note password is named differently than above when used for psql
          PGPASSWORD: postgres

        # Runs integration tests
      - name: Integration Tests
        run: yarn run test
